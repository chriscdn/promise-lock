{
  "name": "@chriscdn/promise-semaphore",
  "version": "2.0.2",
  "description": "Limit or throttle the simultaneous execution of asynchronous code in separate iterations of the event loop.",
  "main": "lib/index.cjs.js",
  "module": "lib/index.es.js",
  "types": "lib/index.d.ts",
  "repository": "https://github.com/chriscdn/promise-semaphore",
  "author": "Christopher Meyer <chris@schwiiz.org>",
  "license": "MIT",
  "scripts": {
    "build": "rollup -c",
    "watch": "rollup -c --watch",
    "test": "jest"
  },
  "devDependencies": {
    "@types/jest": "^29.5.4",
    "esbuild": "^0.19.2",
    "jest": "^29.7.0",
    "rollup": "^3.29.1",
    "rollup-plugin-dts": "^6.0.2",
    "rollup-plugin-esbuild": "^5.0.0",
    "ts-jest": "^29.1.1",
    "typescript": "^5.2.2"
  },
  "keywords": [
    "promise",
    "semaphore",
    "lock",
    "mutex",
    "async",
    "throttle"
  ]
}
